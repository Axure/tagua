PROJECT(tagua)
CMAKE_MINIMUM_REQUIRED(VERSION 2.4.0)
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

include(Tagua)

if (NOT CMAKE_BUILD_TYPE)
  set(DEBUG_BUILD 0)
else (NOT CMAKE_BUILD_TYPE)
  string(REGEX MATCH "debug" DEBUG_BUILD ${CMAKE_BUILD_TYPE})
endif (NOT CMAKE_BUILD_TYPE)

# boost
FIND_PACKAGE(Boost)

# lua
IF(SYSTEM_LUA) # use lua installed in the system
  INCLUDE(UsePkgConfig)

  IF(LUA_PKG)
    PKGCONFIG(${LUA_PKG} LUA_INCLUDE_DIRS LUA_LIBRARY_DIRS LUA_LINK_FLAGS LUA_CFLAGS)
  ELSE(LUA_PKG)
    PKGCONFIG(lua5.1 LUA_INCLUDE_DIRS LUA_LIBRARY_DIRS LUA_LINK_FLAGS LUA_CFLAGS)
    IF(NOT LUA_LINK_FLAGS)
      PKGCONFIG(lua LUA_INCLUDE_DIRS LUA_LIBRARY_DIRS LUA_LINK_FLAGS LUA_CFLAGS)
    ENDIF(NOT LUA_LINK_FLAGS)
  ENDIF(LUA_PKG)

  ADD_CUSTOM_TARGET(lua_library)
ELSE(SYSTEM_LUA) # use the embedded lua source
  SET(LUA_BIN_DIR "${CMAKE_CURRENT_BINARY_DIR}/lua")
  SET(LUA_INCLUDE_DIRS "${LUA_BIN_DIR}/include")
  SET(LUA_LIBRARY_DIRS "${LUA_BIN_DIR}")
  SET(LUA_LINK_FLAGS lua)

  ADD_SUBDIRECTORY(lua)
ENDIF(SYSTEM_LUA)

ADD_DEFINITIONS(-fexceptions)
find_package(KDE4 REQUIRED)
include(KDE4Defaults)

# blitz
FIND_PACKAGE(Blitz REQUIRED)

set(CMAKE_CXX_FLAGS_DEBUGFULL "${CMAKE_C_FLAGS_DEBUGFULL} -DTAGUA_DEBUG")
add_definitions(-DQT_NO_KEYWORDS ${QT_DEFINITIONS} ${KDE4_DEFINITIONS})

add_subdirectory(src)
add_subdirectory(data)

enable_testing()
add_subdirectory(tests EXCLUDE_FROM_ALL)
