
PROJECT(kboard)
CMAKE_MINIMUM_REQUIRED(VERSION 2.4.0)



MACRO(SETUP_SOURCES SRC UI)
  FILE(GLOB_RECURSE ${SRC} *.c *.cpp)

  #find uis
  FILE(GLOB_RECURSE ${UI} *.ui)

  FOREACH(FILE1 ${${SRC}} ${${SRC}})
    GET_FILENAME_COMPONENT(FILE2 ${FILE1} PATH)
    FILE(RELATIVE_PATH FILE3 ${CMAKE_CURRENT_SOURCE_DIR} ${FILE2})
    IF(NOT "${FILE3}" STREQUAL "")
      LIST(APPEND DIRS "${FILE3}")
    ENDIF(NOT "${FILE3}" STREQUAL "")
  ENDFOREACH(FILE1)

  #LIST(SORT DIRS)

  FOREACH(D ${DIRS})
    IF(NOT "${D}" STREQUAL "${PREVD}")
      LIST(APPEND UDIRS "${D}")
    ENDIF(NOT "${D}" STREQUAL "${PREVD}")
    SET(PREVD "${D}")
  ENDFOREACH(D)

  FOREACH(D ${UDIRS})
    FILE(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/${D}")
  ENDFOREACH(D)

  SET(PREVD)
  SET(DIRS)
  SET(UDIRS)
ENDMACRO(SETUP_SOURCES SRC UI)



# Boost stuff
FIND_PACKAGE(Boost)


# Lua stuff
IF(SYSTEM_LUA)
  INCLUDE(UsePkgConfig)

  IF(LUA_PKG)
    PKGCONFIG(${LUA_PKG} LUA_INCLUDE_DIRS LUA_LIBRARY_DIRS LUA_LINK_FLAGS LUA_CFLAGS)
  ELSE(LUA_PKG)
    PKGCONFIG(lua5.1 LUA_INCLUDE_DIRS LUA_LIBRARY_DIRS LUA_LINK_FLAGS LUA_CFLAGS)
    IF(NOT LUA_LINK_FLAGS)
      PKGCONFIG(lua LUA_INCLUDE_DIRS LUA_LIBRARY_DIRS LUA_LINK_FLAGS LUA_CFLAGS)
    ENDIF(NOT LUA_LINK_FLAGS)
  ENDIF(LUA_PKG)

  ADD_CUSTOM_TARGET(lua_library)
ELSE(SYSTEM_LUA)
  SET(LUA_BIN_DIR "${CMAKE_CURRENT_BINARY_DIR}/lua")
  SET(LUA_INCLUDE_DIRS "${LUA_BIN_DIR}/include")
  SET(LUA_LIBRARY_DIRS "${LUA_BIN_DIR}")
  SET(LUA_LINK_FLAGS lua)

  ADD_SUBDIRECTORY(lua)
#   GET_FILENAME_COMPONENT(_LUA_SRC_DIRS lua ABSOLUTE)
#   SET(LUA_INCLUDE_DIRS ${_LUA_SRC_DIRS}/include)
#   SET(LUA_LIBRARY_DIRS ${_LUA_SRC_DIRS}/lib)
#   SET(LUA_LINK_FLAGS ${LUA_LIBRARY_DIRS}/liblua.a)
#
#   ADD_CUSTOM_TARGET(${__LUA_LIB}
#     ALL
#     COMMAND make linux
#     COMMAND make local
#     WORKING_DIRECTORY lua)
ENDIF(SYSTEM_LUA)


# X11
FIND_PACKAGE(X11)

IF(0)
IF (X11_FOUND)
  ADD_DEFINITIONS(-DHAVE_X11)
ENDIF (X11_FOUND)
ENDIF(0)

# Qt4 / KDE4 stuff
ADD_DEFINITIONS(-fexceptions)
FIND_PACKAGE(KDE4 REQUIRED)

INCLUDE(${QT_USE_FILE})


# Compile for debugging as default
SET(CMAKE_BUILD_TYPE debug)

# FIXME, i think this is not portable
IF(1)
  ADD_DEFINITIONS(-Wall -ansi -pedantic -Wno-long-long) # -pg
  #LINK_LIBRARIES(-pg)
ENDIF(1)

# Note by Paolo: verbose mode can be controlled
# directly by the cmake command line. The setting
# is stored in the cache, so you just need to type
#    cmake -DCMAKE_VERBOSE_MAKEFILE=1
# once and for all.

# Debug messages

IF (X11_FOUND)
MESSAGE("* X11 was found!")
ENDIF (X11_FOUND)

SET (MyRuby_DIR ${CMAKE_CURRENT_SOURCE_DIR})
FIND_PACKAGE(MyRuby)

MESSAGE("* Qt4:")
MESSAGE("    Includes:  ${QT_INCLUDE_DIR}")
MESSAGE("    LinkFlags: ${QT_LIBRARIES}")

MESSAGE("* Kde4:")
MESSAGE("    Includes:  ${KDE4_INCLUDE_DIR}")
MESSAGE("    LinkFlags: ${KDE4_KDEUI_LIBS}")

MESSAGE("* Boost:")
MESSAGE("    Includes: ${Boost_INCLUDE_DIRS}")
MESSAGE("    LinkDir:  ${Boost_LIBRARY_DIRS}")

MESSAGE("* Lua:")
MESSAGE("    Includes:  ${LUA_INCLUDE_DIRS}")
MESSAGE("    LinkDir:   ${LUA_LIBRARY_DIRS}")
MESSAGE("    LinkFlags: ${LUA_LINK_FLAGS}")
MESSAGE("    CFlags:    ${LUA_CFLAGS}")

MESSAGE("* Ruby:")
MESSAGE("    Includes: ${RUBY_INCLUDE_PATH}")



SET(DATA_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/share/kboard/)

MACRO(INSTALL_LOCAL_DATA_DIR local_dir install_dir)
  FILE(GLOB_RECURSE INST_FILES ${local_dir}/*)
  FOREACH(INST_FILE ${INST_FILES})
#    MESSAGE("${PIECE_THEME_FILE}")
    STRING(REGEX MATCH "/\\.svn/" TEMP ${INST_FILE})
    IF(NOT TEMP)
      FILE(RELATIVE_PATH REL_FILE ${CMAKE_CURRENT_BINARY_DIR}/${local_dir} ${INST_FILE})
      GET_FILENAME_COMPONENT(REL_DIR ${REL_FILE} PATH)
#      MESSAGE("rel: ${REL_DIR}")
      INSTALL(FILES ${INST_FILE}
        DESTINATION ${DATA_INSTALL_DIR}/${install_dir}/${REL_DIR})
    ENDIF(NOT TEMP)
  ENDFOREACH(INST_FILE)
ENDMACRO(INSTALL_LOCAL_DATA_DIR local_dir install_dir)

INSTALL_LOCAL_DATA_DIR(theme themes)
INSTALL_LOCAL_DATA_DIR(scripts scripts)
INSTALL_LOCAL_DATA_DIR(icons icons)

ADD_DEFINITIONS("-DDATA_INSTALL_DIR=\"${DATA_INSTALL_DIR}\"")




ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tests EXCLUDE_FROM_ALL)
